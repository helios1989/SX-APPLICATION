{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\n\nfunction MainLayoutComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function MainLayoutComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return _r0.toggle();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 9);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [\"*\"];\nexport class MainLayoutComponent {\n  constructor(breakpointObserver, router) {\n    this.breakpointObserver = breakpointObserver;\n    this.router = router;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n\n  ngOnInit() {}\n\n  navigateTo(myRoutes) {\n    const activePage = myRoutes.replace(/-/g, ' ');\n    this.router.navigate(['/' + myRoutes]);\n  }\n\n}\n\nMainLayoutComponent.ɵfac = function MainLayoutComponent_Factory(t) {\n  return new (t || MainLayoutComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nMainLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainLayoutComponent,\n  selectors: [[\"app-main-layout\"]],\n  ngContentSelectors: _c0,\n  decls: 20,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"id\", \"home\"], [\"mat-list-item\", \"\", \"id\", \"member-search\", 3, \"click\"], [\"mat-list-item\", \"\", \"id\", \"search-results\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function MainLayoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0);\n      i0.ɵɵelementStart(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\");\n      i0.ɵɵelementStart(7, \"a\", 3);\n      i0.ɵɵtext(8, \"Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-nav-list\");\n      i0.ɵɵelementStart(10, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function MainLayoutComponent_Template_a_click_10_listener() {\n        return ctx.navigateTo(\"member-search\");\n      });\n      i0.ɵɵtext(11, \"Member Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"a\", 5);\n      i0.ɵɵtext(13, \"Search Results\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-sidenav-content\");\n      i0.ɵɵelementStart(15, \"mat-toolbar\", 6);\n      i0.ɵɵtemplate(16, MainLayoutComponent_button_16_Template, 3, 0, \"button\", 7);\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵelement(18, \"span\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(17, 10, ctx.isHandset$));\n    }\n  },\n  directives: [i3.MatSidenavContainer, i3.MatSidenav, i4.MatToolbar, i5.MatListItem, i5.MatNavList, i3.MatSidenavContent, i6.NgIf, i7.MatButton, i8.MatIcon],\n  pipes: [i6.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/Users/vergelbarit/Documents/appDevelopment/sx-application/sx-app-frontend/src/app/components/main-layout/main-layout.component.ts","/Users/vergelbarit/Documents/appDevelopment/sx-application/sx-app-frontend/src/app/components/main-layout/main-layout.component.html"],"names":[],"mappings":"AACA,SAA6B,WAA7B,QAAgD,qBAAhD;AAEA,SAAS,GAAT,EAAc,WAAd,QAAiC,gBAAjC;;;;;;;;;;;;;;;ACYQ,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAIE,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8DAAA,GAAA;AAAA,MAAA,EAAA,CAAA,aAAA,CAAA,GAAA;AAAA,MAAA,EAAA,CAAA,aAAA;;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,CAAA;;AAAA,aAAS,GAAA,CAAA,MAAA,EAAT;AAAwB,KAAxB;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA;AAA4C,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA;AAAI,IAAA,EAAA,CAAA,YAAA;AAClD,IAAA,EAAA,CAAA,YAAA;;;;;ADZR,OAAM,MAAO,mBAAP,CAA0B;AAE9B,EAAA,WAAA,CACU,kBADV,EAEU,MAFV,EAEwB;AADd,SAAA,kBAAA,GAAA,kBAAA;AACA,SAAA,MAAA,GAAA,MAAA;AAIV,SAAA,UAAA,GAAkC,KAAK,kBAAL,CAAwB,OAAxB,CAAgC,WAAW,CAAC,OAA5C,EAC/B,IAD+B,CAE9B,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,OAAlB,CAF2B,EAG9B,WAAW,EAHmB,CAAlC;AAJ8B;;AAE9B,EAAA,QAAQ,GAAA,CACP;;AAMD,EAAA,UAAU,CAAC,QAAD,EAAiB;AACzB,UAAM,UAAU,GAAG,QAAQ,CAAC,OAAT,CAAiB,IAAjB,EAAsB,GAAtB,CAAnB;AACA,SAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,MAAI,QAAL,CAArB;AACD;;AAhB6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,kBAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,C;AAAA,EAAA,kBAAA,EAAA,G;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,CAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,CAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,YAAA,EAAA,sBAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;ACVhC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA;;;;AAIE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,aAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AAA4B,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAClC,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA;AAAoC,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA;AAAA,eAAS,GAAA,CAAA,UAAA,CAAW,eAAX,CAAT;AAAoC,OAApC;AAAsC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,eAAA;AAAa,MAAA,EAAA,CAAA,YAAA;AACvF,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA;AAAqC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAA;AAAc,MAAA,EAAA,CAAA,YAAA;AACrD,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,qBAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,aAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA;;AAQA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,MAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;AAzBM,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,UAAA,IAAA,MAAA,GAAA,MAAA,EAA+C,QAA/C,EAA+C,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,UAAA,MAAA,KAA/C;AADA,MAAA,EAAA,CAAA,WAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,UAAA,IAAA,QAAA,GAAA,YAAA;AAkBG,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,UAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor( \n    private breakpointObserver: BreakpointObserver,\n    private router: Router ) { }\n\n  ngOnInit(): void {\n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n  navigateTo(myRoutes: string): void {\n    const activePage = myRoutes.replace(/-/g,' ');\n    this.router.navigate(['/'+myRoutes]);\n  }\n    \n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n        [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n        [opened]=\"(isHandset$ | async) === false\">\n      <mat-toolbar >\n        <a mat-list-item  id=\"home\">Home</a>\n      </mat-toolbar>\n      <mat-nav-list>\n        <a mat-list-item id=\"member-search\" (click)=\"navigateTo('member-search')\">Member Search</a>\n        <a mat-list-item id=\"search-results\">Search Results</a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <mat-toolbar color=\"primary\">\n        <button\n          type=\"button\"\n          aria-label=\"Toggle sidenav\"\n          mat-icon-button\n          (click)=\"drawer.toggle()\"\n          *ngIf=\"isHandset$ | async\">\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        </button>\n        <span></span>\n      </mat-toolbar>\n      <!-- Add Content Here -->\n      <ng-content></ng-content>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n  "],"sourceRoot":""},"metadata":{},"sourceType":"module"}